{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { load } from \"js-yaml\";\n\nexport interface MarkdownBlock<T> {\n  metadata: T;\n  content: string;\n}\n\nconst chunks = <T>(arr: T[], size: number): T[][] => {\n  const chunks: T[][] = [];\n  for (let i = 0; i < arr.length; i += size) {\n    chunks.push(arr.slice(i, i + size));\n  }\n  return chunks;\n};\n\nexport const parse = <T>(content: string): MarkdownBlock<T>[] => {\n  if (!content || typeof content !== \"string\") {\n    return [{ metadata: {} as T, content: content || \"\" }];\n  }\n\n  try {\n    const blocks = content\n      .split(/^---$/m)\n      .map((block) => block.trim())\n      .filter(Boolean);\n\n    if (blocks.length === 1) {\n      return [{ metadata: {} as T, content: blocks[0] }];\n    }\n\n    return chunks(blocks, 2).map(([metaBlock, contentBlock = \"\"]) => {\n      let metadata = {} as T;\n\n      try {\n        metadata = (metaBlock ? (load(metaBlock) as T) : {}) as T;\n      } catch (metaError) {\n        console.warn(\"Failed to parse metadata block:\", metaError);\n      }\n\n      return { metadata, content: contentBlock };\n    });\n  } catch (error) {\n    console.error(\"Failed to parse markdown:\", error);\n    return [{ metadata: {} as T, content: content }];\n  }\n};\n"],"mappings":";AAAA,SAAS,YAAY;AAOrB,IAAM,SAAS,CAAI,KAAU,SAAwB;AACnD,QAAMA,UAAgB,CAAC;AACvB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,MAAM;AACzC,IAAAA,QAAO,KAAK,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC;AAAA,EACpC;AACA,SAAOA;AACT;AAEO,IAAM,QAAQ,CAAI,YAAwC;AAC/D,MAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,WAAO,CAAC,EAAE,UAAU,CAAC,GAAQ,SAAS,WAAW,GAAG,CAAC;AAAA,EACvD;AAEA,MAAI;AACF,UAAM,SAAS,QACZ,MAAM,QAAQ,EACd,IAAI,CAAC,UAAU,MAAM,KAAK,CAAC,EAC3B,OAAO,OAAO;AAEjB,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO,CAAC,EAAE,UAAU,CAAC,GAAQ,SAAS,OAAO,CAAC,EAAE,CAAC;AAAA,IACnD;AAEA,WAAO,OAAO,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,WAAW,eAAe,EAAE,MAAM;AAC/D,UAAI,WAAW,CAAC;AAEhB,UAAI;AACF,mBAAY,YAAa,KAAK,SAAS,IAAU,CAAC;AAAA,MACpD,SAAS,WAAW;AAClB,gBAAQ,KAAK,mCAAmC,SAAS;AAAA,MAC3D;AAEA,aAAO,EAAE,UAAU,SAAS,aAAa;AAAA,IAC3C,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,6BAA6B,KAAK;AAChD,WAAO,CAAC,EAAE,UAAU,CAAC,GAAQ,QAAiB,CAAC;AAAA,EACjD;AACF;","names":["chunks"]}